plot(rpois(10,1))
plot(rpois(1000,1))
dens(rpois(1000,1))
dens(rpois(1000,100))
plot(rpois(1000,100))
rgamma(1000, 1,1)
dens(rgamma(1000, 1,1))
hist(rgamma(1000, 1,1))
hist(rgamma(1000, 1,.1))
hist(rgamma(1000, 1,2))
hist(rgamma(1000, 5,2))
hist(rgamma(1000, 5,1))
remotes::install_github("https://github.com/babeheim/yamltools")
remotes::install_github("https://github.com/babeheim/yamltools")
remotes::install_github("https://github.com/babeheim/yamltools")
remotes::install_github("https://github.com/babeheim/yamltools")
install.packages("installr")
check.for.updates.R()
library(installr)
check.for.updates.R()
install.R()
remotes::install_github("https://github.com/babeheim/yamltools")
remotes::install_github("https://github.com/babeheim/yamltools")
library(fansi)
install.packages("fansi")
install.packages("fansi")
remotes::install_github("https://github.com/babeheim/yamltools")
install.packages("jsonlite")
remotes::install_github("https://github.com/babeheim/yamltools")
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
library(cmdstanr)
install_cmdstan()
check_cmdstan_toolchain(fix = TRUE)
install_cmdstan()
install.packages(c("coda","mvtnorm","devtools","loo","dagitty","shape"))
devtools::install_github("rmcelreath/rethinking")
#############################################
############ EASY RUN TO GET DATA ###########
set_project_wd <- function(folder){
user=Sys.info()[[6]]
if(user=="jeffrey_andrews") setwd(paste0("C:/Users/jeffrey_andrews/OneDrive/Documents/", folder))
else if(user=="Jeff") setwd(paste0("C:/Users/Jeff/OneDrive/Documents/", folder))
else if(user == 'jeffr')  setwd(paste0("C:/Users/jeffr/OneDrive/Documents/", folder))
}
set_project_wd("Risk")
source("code/script/getData.R")
source("code/script/getGraphs.R")
source("code/script/getSurvey.R")
dl=getData(load_imputed = T)
dl
d$ag_crop$unit == "nusu_shamba"
which(d$ag_crop$unit == "nusu_shamba")
which(d$ag_crop$unit == "nusu shamba")
which(tolower(d$ag_crop$unit) == "nusu shamba")
d$ag_crop[which(tolower(d$ag_crop$unit) == "nusu shamba"), ]
dl
dl=getData(load_imputed = T)
g=getGraphs(shehiaF = c("kifundi"))
g$inctypes
g$income
g$credit
g$gift
g=getGraphs(shehiaF = c("kipange"))
g$inctypes
g$income
g=getGraphs(shehiaF = c("kipange"))
g$credit
g$gift
g=getGraphs(shehiaF = c("konde"))
g$inctypes
g$income
g$credit
g$gift
library(dplyr)
############################################################################
################### BUILD BASE DATA ########################################
library("gridBase")
library("rethinking")
library(matrixStats)
# setwd("/home/jeffrey_andrews")
# setwd("C:/Users/jeffr/OneDrive/Documents/")
# setwd("C:/Users/jeffrey_andrews/OneDrive/Documents/")
source("WTA/paths.R")
source(path$load)
###SOURCING####
source("functions/plotting.R")
source("functions/data_manipulation.R")
source("functions/utility.R")
source("functions/graphics.R")
source("functions/measurement.R")
forest<- read.csv("WTA/data/AmyDataSummary.csv")
# source("functions/load.R")
setwd("C:/Users/jeffrey_andrews/OneDrive/Documents/")
source("WTA/paths.R")
source(path$load)
###SOURCING####
source("functions/plotting.R")
source("functions/data_manipulation.R")
source("functions/utility.R")
source("functions/graphics.R")
source("functions/measurement.R")
forest<- read.csv("WTA/data/AmyDataSummary.csv")
forest<- read.csv("WTA/data/AmyDataSummary.csv")
# source("functions/load.R")
protest_old = FALSE
forestproducts$firewood_m3
forestproducts$firewood_m3 <- NA
forestproducts$firewood_unit
table(forestproducts$firewood_unit)
if(forestproducts$firewood_unit == "korja") forestproducts$firewood_m3 == forestproducts$firewood_harvest*.6
forestproducts$firewood_m3 = ifelse(forestproducts$firewood_unit == "korja", forestproducts$firewood_harvest*.6, forestproducts$firewood_m3)
forestproducts$firewood_m3
forestproducts$firewood_m3 = ifelse(forestproducts$firewood_unit == "korja", forestproducts$firewood_harvest*.6, forestproducts$firewood_m3)
forestproducts$firewood_m3 = ifelse(forestproducts$firewood_unit == "mizigo", forestproducts$firewood_harvest*.096, forestproducts$firewood_m3)
forestproducts$firewood_m3 = ifelse(forestproducts$firewood_unit == "dau", forestproducts$firewood_harvest*1, forestproducts$firewood_m3)
forestproducts$firewood_m3 = ifelse(forestproducts$firewood_unit == "gari ya ngombe", forestproducts$firewood_harvest*1, forestproducts$firewood_m3)
forestproducts$firewood_m3
plot(forestproducts$firewood_m3)
forestproducts$firewood_m3 > 100 == NA
forestproducts$firewood_m3[forestproducts$firewood_m3 > 100] = NA
plot(forestproducts$firewood_time, forestproducts$firewood_m3)
plot(forestproducts$firewood_time,  forestproducts$prod)
plot(forestproducts$firewood_time,  forestproducts$prod)
plot(forestproducts$firewood_time ~  forestproducts$prod)
plot(forestproducts$firewood_time ~  forestproducts$firewood_prod)
plot(forestproducts$firewood_time ~  forestproducts$firewood_m3)
e=(forestproducts$firewood_time[forestproducts$firewood_prod > 0])/demographics$hh_adult_eq
h=forestproducts$firewood_prod[forestproducts$firewood_prod > 0]
summary(lm(log1p(h) ~ log1p(e)))
summary(lm(log1p(h) ~ log1p(e)))
e=(forestproducts$firewood_time[forestproducts$firewood_m3 > 0])
h=forestproducts$firewood_prod[forestproducts$firewood_m3 > 0]
summary(lm(log1p(h) ~ log1p(e)))
summary(lm(log1p(h) ~ log1p(e)))
e=(forestproducts$firewood_time[forestproducts$firewood_m3 > 0])
h=forestproducts$firewood_prod[forestproducts$firewood_m3 > 0]
summary(lm(log1p(h) ~ log1p(e)))
summary(lm(log1p(h) ~ log1p(e)))
e=(forestproducts$firewood_time[forestproducts$firewood_m3 > 0])
h=forestproducts$firewood_m3[forestproducts$firewood_m3 > 0]
summary(lm(log1p(h) ~ log1p(e)))
summary(lm(log1p(h) ~ log1p(e)))
db <- as.data.frame(matrix(NA, nrow = 0, ncol = 4))
for(i in unique(forest$Shehia)){
tot = mean((forest$Forest + forest$NonForest)[forest$Shehia==i])
loss20022011=(forest$Forest[forest$Shehia==i & forest$Year==2002]-forest$Forest[forest$Shehia==i & forest$Year==2012])/forest$Forest[forest$Shehia==i & forest$Year==2002]/10
loss20122017=(forest$Forest[forest$Shehia==i & forest$Year==2012]-forest$Forest[forest$Shehia==i & forest$Year==2017])/forest$Forest[forest$Shehia==i & forest$Year==2012]/5
diff = loss20022011-loss20122017
d2017 = forest$Forest[forest$Shehia==i & forest$Year==2017]
ok = forest$Forest[forest$Shehia==i & forest$Year==2012]+forest$NonForest[forest$Shehia==i & forest$Year==2012]
db=rbind(db, c(i, diff, d2017, ok))
}
dr <- rep(0, 829)
df2017 <- rep(0, 829)
df2017 <- rep(0, 829)
for(i in 1:nrow(demographics)){
ind=which(tolower(db[,1])== demographics$ward[i])
dr[i] = ifelse(length(ind) >0, db[ind,2], NA)
df2017[i] = ifelse(length(ind) >0, db[ind,3], NA)
}
df <-  data.frame(B = log1p(as.numeric(df2017)),
Y = log1p(forestproducts$firewood_m3),
E = log1p(forestproducts$firewood_time),
P = log1p(wealth$panga),
A = log1p(wealth$axe),
S = (demographics$ward_id))
df<-df[complete.cases(df),]
dat <- as.list(df)
m1<-ulam(alist(
Y ~ normal(mu, sigma),
mu <- mu_a + a[S]*sigma_s + exp(b1[S]*sigma_b1 + mu_b1)*E + exp(b2[S]*sigma_b2 + mu_b2)*B + b3*A + b4*P,
mu_a ~ normal(10, 1),
a[S] ~ normal(0, 1),
sigma_s ~ exponential(1),
b1[S] ~ normal(0, .5),
mu_b1 ~normal(0, 1),
sigma_b1 ~ exponential(1),
b2[S] ~ normal(0, .5),
mu_b2 ~normal(0, 1),
sigma_b2 ~ exponential(1),
c(b3, b4) ~ normal(0, 1),
sigma ~ exponential(1)
), data = dat, chains =4, cores =4)
df$B/(100*100)
df$B/(100*100)
df$B/(100*100)
df2017/(100*100)
df2017/(100*100)
df2017
for(i in unique(forest$Shehia)){
tot = mean((forest$Forest + forest$NonForest)[forest$Shehia==i])
loss20022011=(forest$Forest[forest$Shehia==i & forest$Year==2002]-forest$Forest[forest$Shehia==i & forest$Year==2012])/forest$Forest[forest$Shehia==i & forest$Year==2002]
loss20122017=(forest$Forest[forest$Shehia==i & forest$Year==2012]-forest$Forest[forest$Shehia==i & forest$Year==2017])/forest$Forest[forest$Shehia==i & forest$Year==2012]
diff = loss20022011-loss20122017
d2017 = forest$Forest[forest$Shehia==i & forest$Year==2017]
ok = forest$Forest[forest$Shehia==i & forest$Year==2012]+forest$NonForest[forest$Shehia==i & forest$Year==2012]
db=rbind(db, c(i, diff, d2017, ok))
}
forest
1061/954900
954900/1061
df2017m3 = (df2017*900)/(100*100)*49
df2017m3 = (df2017*900)/(100*100)*49
df2017
df2017m3 = (as.numeric(df2017)*900)/(100*100)*49
df2017m3
df <-  data.frame(B = log1p(as.numeric(df2017)),
Y = log1p(forestproducts$firewood_m3),
E = log1p(forestproducts$firewood_time),
P = log1p(wealth$panga),
A = log1p(wealth$axe),
S = (demographics$ward_id))
df<-df[complete.cases(df),]
dat <- as.list(df)
df <-  data.frame(B = log1p(as.numeric(df2017m3)),
Y = log1p(forestproducts$firewood_m3),
E = log1p(forestproducts$firewood_time),
P = log1p(wealth$panga),
A = log1p(wealth$axe),
S = (demographics$ward_id))
df<-df[complete.cases(df),]
dat <- as.list(df)
dat
m1<-ulam(alist(
Y ~ normal(mu, sigma),
mu <- mu_a + a[S]*sigma_s + exp(b1[S]*sigma_b1 + mu_b1)*E + exp(b2[S]*sigma_b2 + mu_b2)*B + b3*A + b4*P,
mu_a ~ normal(2, 1),
a[S] ~ normal(0, 1),
sigma_s ~ exponential(1),
b1[S] ~ normal(0, .5),
mu_b1 ~normal(0, 1),
sigma_b1 ~ exponential(1),
b2[S] ~ normal(0, .5),
mu_b2 ~normal(0, 1),
sigma_b2 ~ exponential(1),
c(b3, b4) ~ normal(0, 1),
sigma ~ exponential(1)
), data = dat, chains =4, cores =4)
precis(m1)
# Draw posteriors for model.
post <- extract.samples(m1)
ns = 2000 # Number of samples to draw
nshehia =  24
BETA = matrix(NA, nrow = ns, ncol = 24)
ALPHA = matrix(NA, nrow = ns, ncol = 24)
TECH = matrix(NA, nrow = ns, ncol = 24)
for(i in 1:24){
tempB=exp(post$b2[,i]*post$sigma_b2+post$mu_b2)
BETA[,i]=sample(tempB, ns, replace = TRUE)
tempA=post$a[,i]*post$sigma_s+post$mu_a
TECH[,i]=sample(tempA, ns, replace = TRUE)
tempA=exp(post$b1[,i]*post$sigma_b1+post$mu_b1)
ALPHA[,i]=sample(tempA, ns, replace = TRUE)
}
# plot
BETAL = c()
ALPHAL= c()
TECHL= c()
SHEHIA= c()
for(i in 1:nshehia){
BETAL <-c(BETAL, BETA[,i])
TECHL <-c(TECHL, TECH[,i])
ALPHAL <-c(ALPHAL, ALPHA[,i])
SHEHIA <- c(SHEHIA, rep(demographics$ward[demographics$ward_id ==i][15], ns))
}
library(ggplot2)
df <- data.frame(SHEHIA, BETAL, ALPHAL, TECHL)
df$SHEHIA = with(df, reorder(SHEHIA, BETAL, median))
ggplot(df, aes(x=SHEHIA, y=BETAL, fill=SHEHIA)) +
geom_violin()+
ylim(0, 1)
df$SHEHIA = with(df, reorder(SHEHIA, TECHL, median))
ggplot(df, aes(x=SHEHIA, y=TECHL, fill=SHEHIA)) +
geom_violin()+
ylim(5,15)
SHEHIA
df$TECHL
df$SHEHIA = with(df, reorder(SHEHIA, TECHL, median))
ggplot(df, aes(x=SHEHIA, y=TECHL, fill=SHEHIA)) +
geom_violin()
df$SHEHIA = with(df, reorder(SHEHIA, ALPHA, median))
ggplot(df, aes(x=SHEHIA, y=ALPHAL, fill=SHEHIA)) +
geom_violin() +
ylim(0, 1)
df$SHEHIA = with(df, reorder(SHEHIA, TECHL, median))
ggplot(df, aes(x=SHEHIA, y=TECHL, fill=SHEHIA)) +
geom_violin()
df$SHEHIA = with(df, reorder(SHEHIA, BETAL, median))
ggplot(df, aes(x=SHEHIA, y=BETAL, fill=SHEHIA)) +
geom_violin()+
ylim(0, 1)
write.csv(TECH,"~/work/cpr/data/abc_priors_tech.csv")
write.csv(ALPHA,"~/work/cpr/data/abc_priors_alpha.csv")
write.csv(BETA,"~/work/cpr/data/abc_priors_beta.csv")
setwd("Y:/eco_andrews/Projects/CPR")
write.csv(WAGE,"~/work/cpr/data/abc_priors_wage.csv")
write.csv(WAGE,"/work/cpr/data/abc_priors_wage.csv")
write.csv(TECH,"/work/cpr/data/abc_priors_tech.csv")
write.csv(TECH,"work/cpr/data/abc_priors_tech.csv")
write.csv(TECH,"work/cpr/data/abc_priors_tech.csv")
write.csv(TECH,"work/cpr/data/abc_priors_tech.csv")
write.csv(TECH,"/data/abc_priors_tech.csv")
setwd("Y:/eco_andrews/Projects/CPR")
write.csv(TECH,"/data/abc_priors_tech.csv")
write.csv(TECH,"data/abc_priors_tech.csv")
write.csv(TECH,"data/abc_priors_tech.csv")
write.csv(ALPHA,"data/abc_priors_alpha.csv")
write.csv(BETA,"data/abc_priors_beta.csv")
db
(db[,3]*900)/(100*100)*49
(as.numeric(db[,3])*900)/(100*100)*49
db[,3]<-(as.numeric(db[,3])*900)/(100*100)*49
db[,4]<-(as.numeric(db[,4])*900)/(100*100)*49
write.csv(db[,4],"data/abc_priors_land_total.csv")
write.csv(db[,3],"data/abc_priors_forest_2017.csv")
write.csv(db[,2],"data/abc_data_deforesation.csv")
write.csv(SHEHIA,"data/abc_priors_shehia.csv")
library(dplyr)
############################################################################
################### BUILD BASE DATA ########################################
library("gridBase")
library("rethinking")
library(matrixStats)
# setwd("/home/jeffrey_andrews")
# setwd("C:/Users/jeffr/OneDrive/Documents/")
# setwd("C:/Users/jeffrey_andrews/OneDrive/Documents/")
source("WTA/paths.R")
source(path$load)
###SOURCING####
source("functions/plotting.R")
source("functions/data_manipulation.R")
source("functions/utility.R")
source("functions/graphics.R")
source("functions/measurement.R")
forest<- read.csv("WTA/data/AmyDataSummary.csv")
# source("functions/load.R")
protest_old = FALSE
##########################################################################
####################### CONVERT PRODUCTION OVER INTO CUBIC METERS ########
forestproducts$firewood_m3 <- NA
table(forestproducts$firewood_unit)
forestproducts$firewood_m3 = ifelse(forestproducts$firewood_unit == "korja", forestproducts$firewood_harvest*.6, forestproducts$firewood_m3)
forestproducts$firewood_m3 = ifelse(forestproducts$firewood_unit == "mizigo", forestproducts$firewood_harvest*.096, forestproducts$firewood_m3)
forestproducts$firewood_m3 = ifelse(forestproducts$firewood_unit == "dau", forestproducts$firewood_harvest*1, forestproducts$firewood_m3)
forestproducts$firewood_m3 = ifelse(forestproducts$firewood_unit == "gari ya ngombe", forestproducts$firewood_harvest*1, forestproducts$firewood_m3)
# Remove that one obvious outlier
forestproducts$firewood_m3[forestproducts$firewood_m3 > 100] = NA
##########################################################################
###################### GET ELASTICITY OF LABOR ###########################
# Labor elasticity = 0.46
# Estimated Labor Time Spent
plot(forestproducts$firewood_time ~  forestproducts$firewood_m3)
e=(forestproducts$firewood_time[forestproducts$firewood_m3 > 0])
h=forestproducts$firewood_m3[forestproducts$firewood_m3 > 0]
summary(lm(log1p(h) ~ log1p(e)))
summary(lm(log1p(h) ~ log1p(e)))
# What is the total amount of time 8*30*12 =4320
# This should get the target effort allocation.
mean(forestproducts$firewood_time/2880, na.rm = T)
plot(forestproducts$firewood_time/2880/demographics$hh_adult_eq)
# GENERATE FOREST HARVEST TIME
E = 2880-(rowSums(select(forestproducts, ends_with("time")), na.rm = T)/demographics$hh_adult_eq)
FI = df_income$forestinc/demographics$hh_adult_eq
NFI = (df_income$total_inc-df_income$forestinc)/demographics$hh_adult_eq
W = wealth$total_wealth
dat=data.frame(W=standardize(W),
E=E/365/2500,
NFI=NFI/365/2500,
FI,
S = demographics$ward_id)
dat = dat[dat$W >0, ]
dat = dat[dat$NFI >0, ]
dat = dat[complete.cases(dat), ]
# Wage
################################################################################
################ GENERATE TECH, BETA, AND ALPHA ################################
db <- as.data.frame(matrix(NA, nrow = 0, ncol = 4))
for(i in unique(forest$Shehia)){
tot = mean((forest$Forest + forest$NonForest)[forest$Shehia==i])
loss20022011=(forest$Forest[forest$Shehia==i & forest$Year==2002]-forest$Forest[forest$Shehia==i & forest$Year==2012])/forest$Forest[forest$Shehia==i & forest$Year==2002]
loss20122017=(forest$Forest[forest$Shehia==i & forest$Year==2012]-forest$Forest[forest$Shehia==i & forest$Year==2017])/forest$Forest[forest$Shehia==i & forest$Year==2012]
diff = loss20022011-loss20122017
d2017 = forest$Forest[forest$Shehia==i & forest$Year==2017]
ok = forest$Forest[forest$Shehia==i & forest$Year==2012]+forest$NonForest[forest$Shehia==i & forest$Year==2012]
db=rbind(db, c(i, diff, d2017, ok))
}
################################################################################
################ GENERATE TECH, BETA, AND ALPHA ################################
db <- as.data.frame(matrix(NA, nrow = 0, ncol = 4))
for(i in unique(forest$Shehia)){
tot = mean((forest$Forest + forest$NonForest)[forest$Shehia==i])
loss20022011=(forest$Forest[forest$Shehia==i & forest$Year==2002]-forest$Forest[forest$Shehia==i & forest$Year==2012])/forest$Forest[forest$Shehia==i & forest$Year==2002]
loss20122017=(forest$Forest[forest$Shehia==i & forest$Year==2012]-forest$Forest[forest$Shehia==i & forest$Year==2017])/forest$Forest[forest$Shehia==i & forest$Year==2012]
diff = loss20022011-loss20122017
d2017 = forest$Forest[forest$Shehia==i & forest$Year==2017]
ok = forest$Forest[forest$Shehia==i & forest$Year==2012]+forest$NonForest[forest$Shehia==i & forest$Year==2012]
db=rbind(db, c(i, diff, d2017, ok))
}
dr <- rep(0, 829)
df2017 <- rep(0, 829)
df2017 <- rep(0, 829)
for(i in 1:nrow(demographics)){
ind=which(tolower(db[,1])== demographics$ward[i])
dr[i] = ifelse(length(ind) >0, db[ind,2], NA)
df2017[i] = ifelse(length(ind) >0, db[ind,3], NA)
}
# Calculate M3 for forests
df2017m3 = (as.numeric(df2017)*900)/(100*100)*49
df <-  data.frame(B = log1p(as.numeric(df2017m3)),
Y = log1p(forestproducts$firewood_m3),
E = log1p(forestproducts$firewood_time),
P = log1p(wealth$panga),
A = log1p(wealth$axe),
S = (demographics$ward_id))
df
df<-df[complete.cases(df),]
dat <- as.list(df)
m1<-ulam(alist(
Y ~ normal(mu, sigma),
mu <- mu_a + a[S]*sigma_s + exp(b1[S]*sigma_b1 + mu_b1)*E + exp(b2[S]*sigma_b2 + mu_b2)*B + b3*A + b4*P,
mu_a ~ normal(2, 1),
a[S] ~ normal(0, 1),
sigma_s ~ exponential(1),
b1[S] ~ normal(0, .5),
mu_b1 ~normal(0, 1),
sigma_b1 ~ exponential(1),
b2[S] ~ normal(0, .5),
mu_b2 ~normal(0, 1),
sigma_b2 ~ exponential(1),
c(b3, b4) ~ normal(0, 1),
sigma ~ exponential(1)
), data = dat, chains =4, cores =4)
# Draw posteriors for model.
post <- extract.samples(m1)
ns = 2000 # Number of samples to draw
nshehia =  24
BETA = matrix(NA, nrow = ns, ncol = 24)
ALPHA = matrix(NA, nrow = ns, ncol = 24)
TECH = matrix(NA, nrow = ns, ncol = 24)
for(i in 1:24){
tempB=exp(post$b2[,i]*post$sigma_b2+post$mu_b2)
BETA[,i]=sample(tempB, ns, replace = TRUE)
tempA=post$a[,i]*post$sigma_s+post$mu_a
TECH[,i]=sample(tempA, ns, replace = TRUE)
tempA=exp(post$b1[,i]*post$sigma_b1+post$mu_b1)
ALPHA[,i]=sample(tempA, ns, replace = TRUE)
}
# plot
###############################################
########### MAKE DATA #########################
a = data.frame(score = rowSums(conservation[, c("defor_neighbors", "defor_others")]),
ward = demographics$ward)
theft=a %>% group_by(ward) %>% summarize(mean = mean(score, na.rm=T))
# GENERATE FOREST HARVEST TIME
E = rowSums(select(forestproducts, ends_with("time")), na.rm = T)/demographics$hh_adult_eq/2880
e = forestproducts$firewood_time/demographics$hh_adult_eq/2880
setwd("Y:/eco_andrews/Projects/CPR")
# MAKE DATA
write.csv(WAGE,"/work/cpr/data/abc_priors_wage.csv")
write.csv(TECH,"data/abc_priors_tech.csv")
write.csv(ALPHA,"data/abc_priors_alpha.csv")
write.csv(BETA,"data/abc_priors_beta.csv")
# CALCULATE VOLUME OF WOOD
db[,3]<-(as.numeric(db[,3])*900)/(100*100)*49
db[,4]<-(as.numeric(db[,4])*900)/(100*100)*49
db
# CALCULATE VOLUME OF WOOD
db[,3]<-(as.numeric(db[,3])*900)/(100*100)*49
db[,4]<-(as.numeric(db[,4])*900)/(100*100)*49
write.csv(db[,4],"data/abc_priors_land_total.csv")
write.csv(db[,3],"data/abc_priors_forest_2017.csv")
write.csv(db[,2],"data/abc_data_deforesation.csv")
write.csv(SHEHIA,"data/abc_priors_shehia.csv")
SHEHIA
db[,4]
